{"mappings":"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","sources":["src/js/home-page.js","src/js/renderCards.js","src/js/movie-card-modal.js","src/js/search-movies.js","src/index.js"],"sourcesContent":["import FetchApiMovies from './api';\nimport { spinner } from './spinner';\nimport { renderMoviesCard } from './renderCards';\nimport { clearMoviesContainer } from './renderCards';\n\nconst target = document.getElementById('foo');\nconst fetchApiHomeContent = new FetchApiMovies();\n\nshowPopularMovies();\n\nlet pagination = document.querySelector('#pagination');\n\nlet notesOnePage = 10;\n\nasync function showPopularMovies() {\n  try {\n    spinner.spin(target);\n    const data = await fetchApiHomeContent.fetchPopularMovies();\n    const cards = data.results;\n    let countOfItems = Math.ceil(cards.length / notesOnePage);\n\n    let items = [];\n\n    for (let i = 1; i <= countOfItems; i++) {\n      let li = document.createElement('li');\n\n      if (i == 1) {\n        let li_0 = document.createElement('li');\n        li_0.innerHTML = '<li>&#8592;</li>';\n        pagination.appendChild(li_0);\n      }\n\n      if (countOfItems <= 5) {\n        li.innerHTML = i;\n        pagination.appendChild(li);\n        items.push(li);\n      }\n\n      if (countOfItems > 5) {\n        li.innerHTML = i;\n\n        pagination.appendChild(li);\n\n        items.push(li);\n\n        if (i == 1) {\n          let li_2 = document.createElement('li');\n          li_2.innerHTML = '...';\n          pagination.appendChild(li_2);\n        }\n        if (countOfItems - 1 == i) {\n          let li_1 = document.createElement('li');\n          li_1.innerHTML = '...';\n          pagination.appendChild(li_1);\n        }\n      }\n\n      if (i == countOfItems) {\n        let li_max = document.createElement('li');\n        li_max.innerHTML = '<li>&#8594;</li>';\n        pagination.appendChild(li_max);\n      }\n    }\n\n    let showPage = (function () {\n      let active;\n\n      return function (item) {\n        if (active) {\n          active.classList.remove('active');\n        }\n        active = item;\n\n        item.classList.add('active');\n\n        let pageNum = +item.innerHTML;\n        let start = (pageNum - 1) * notesOnePage;\n        let end = start + notesOnePage;\n        renderMoviesCard(cards.slice(start, end));\n      };\n    })();\n\n    showPage(items[0]);\n\n    for (let item of items) {\n      item.addEventListener('click', function () {\n        clearMoviesContainer();\n        showPage(this);\n      });\n    }\n  } catch (e) {\n    console.log(e);\n  } finally {\n    spinner.stop();\n  }\n}\n","export function renderMoviesCard(cards) {\n  refs.cardList.insertAdjacentHTML('beforeend', createMoviesCard(cards));\n}\n\nexport function clearMoviesContainer() {\n  refs.cardList.innerHTML = '';\n}\n\nimport { genres } from './Templates/genres';\nconst refs = {\n  cardList: document.querySelector('.cards__list'),\n};\n\nconst GENRE_KEY = 'genres';\nlet genreList = genres;\n\nfunction loadGenres(genres) {\n  const list = genreList\n    .filter(obj => genres.includes(obj.id))\n    .map(g => g.name);\n  // console.log('list :>> ', list);\n  return list.length > 2 ? `${list[0]}, ${list[1]}, Others` : list.join(', ');\n}\n\nasync function saveToLocalStorage() {\n  if (localStorage.key === GENRE_KEY) {\n    return;\n  }\n}\n\nfunction createMoviesCard(cards = []) {\n  saveToLocalStorage();\n  return cards\n    .map(card => {\n      const { id, title, poster_path, genre_ids, release_date } = card;\n      return `<li class=\"home-card__link\" id=${id}>\n\t\t\t\t<div class = \"home-card__thumb\">\n\t\t\t\t<picture class=\"home-card__poster\">\n\t\t\t\t\t\t  <source media=\"(min-width:1280px)\"  srcset=\"https://image.tmdb.org/t/p/w500${poster_path}\">\n\t\t\t\t\t\t  <source media=\"(min-width:768px)\"  srcset=\"https://image.tmdb.org/t/p/w400${poster_path}\">\n\t\t\t\t\t\t  <img class=\"home-card__img\" src=\"https://image.tmdb.org/t/p/w300${poster_path}\" alt=\"${title}\" loading=\"lazy\">\n\t\t\t\t\t  </picture>\n\t\t\t\t  </div>\n\t\t\t\t  <div class=\"card__content\">\n\t\t\t\t  <h2 class=\"card__title\">${title || 'no name'}</h2>\n\t\t\t\t  <p class=\"card__text\">${loadGenres(genre_ids)} | ${\n        release_date\n          ? release_date.slice(0, 4)\n          : 'no infomation about release date'\n      }</p>\n\t\t\t</div>\n\t\t\t\t  </li>`;\n    })\n    .join('');\n}\n","import axios from 'axios';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { spinner } from './spinner';\n\nimport {\n  WATCHED_FILM,\n  QUEUED_FILM,\n  loadFromLocalStorage,\n  saveToLocalStorage,\n  checkLocalStorageMovies,\n} from './local-storage';\n\n// для трейлера до фільму у модалці\nimport FetchApiMovies from './api';\nimport { markupMovieTrailer } from './markup-trailer';\nconst target = document.getElementById('foo');\n\nconst refs = {\n  modalFilmBackdrop: document.querySelector('[data-modal-film]'),\n  modalFilm: document.querySelector('.modal-film'),\n  cardFilm: document.querySelector('.cards__list'),\n  cardFilmLibrary: document.querySelector('.container-library'),\n};\n\nrefs.cardFilm.addEventListener('click', onOpenModalFilm);\nrefs.modalFilmBackdrop.addEventListener('click', onBackdropClick);\n\n// --------open/close-modal\n\nfunction onOpenModalFilm(e) {\n  refs.modalFilmBackdrop.classList.remove('is-hidden');\n  refs.modalFilm.classList.remove('is-hidden');\n  document.body.classList.add('no-scroll');\n\n  document.addEventListener('click', onCloseModalFilmByBtn);\n  window.addEventListener('keydown', onCloseEscBtn);\n\n  const idCard = e.target.closest('.home-card__link').id;\n\n  fetchMovieById(idCard).then(response => {\n    refs.modalFilm.innerHTML = '';\n    return render(response);\n  });\n\n  if (!refs.modalFilmBackdrop.classList.contains('is-hidden')) {\n    refs.modalFilm.addEventListener('click', onModalLibraryBtnsClick);\n  }\n\n  // // ------ trailer movie-------\n  const boxFetchApiMovies = new FetchApiMovies();\n  boxFetchApiMovies\n    .fetchMoviesTrailers(idCard)\n    .then(data => {\n      console.log(data);\n      // перевірка якщо пустий масив\n      // показувати картинку\n      if (data.results.length === 0) {\n        return;\n      }\n      const picture = document.querySelector('.modal-film-card-wrapper');\n      picture.remove();\n      const markupTrailer = markupMovieTrailer(data.results[0].key);\n      refs.modalFilm.insertAdjacentHTML('afterbegin', markupTrailer);\n    })\n    .catch(error => console.log(error));\n  // // ------------ end treiler movie -------------\n}\n\nfunction onModalLibraryBtnsClick(e) {\n  const btn = e.target;\n  const filmId = Number(e.target.dataset.id);\n\n  if (e.target.classList.contains('js-add-watched')) {\n    // checkLocalStorageWatchedMovies(btn, filmId);\n    // btn.classList.add('active');\n    checkLocalStorageMovies(btn, filmId, WATCHED_FILM);\n  } else if (e.target.classList.contains('js-add-queue')) {\n    // checkLocalStorageQueueMovies(btn, filmId);\n    checkLocalStorageMovies(btn, filmId, QUEUED_FILM);\n  }\n}\n\nfunction closeModalFilm() {\n  window.removeEventListener('keydown', onCloseEscBtn);\n  document.removeEventListener('click', onCloseModalFilmByBtn);\n  refs.modalFilmBackdrop.classList.add('is-hidden');\n  refs.modalFilm.classList.add('is-hidden');\n  document.body.classList.remove('no-scroll');\n}\n\nfunction onCloseModalFilmByBtn(e) {\n  if (\n    e.target.classList.contains('close-modal__btn-text') ||\n    e.target.classList.contains('close-modal__btn-inner') ||\n    e.target.classList.contains('close-modal__btn-text')\n  ) {\n    closeModalFilm();\n  }\n}\n\nfunction onBackdropClick(e) {\n  if (e.currentTarget === e.target) {\n    closeModalFilm();\n  }\n}\n\nfunction onCloseEscBtn(e) {\n  // console.log(e.code);\n  if (e.code === 'Escape') {\n    closeModalFilm();\n  }\n}\n\n// -----Fetch-by-id---\n\nasync function fetchMovieById(idMovie) {\n  try {\n    spinner.spin(target);\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${idMovie}?api_key=9fae0fdf266213c68361ca578a95b948&language=en-US`\n    );\n    return await response.data;\n  } catch (error) {\n    console.log(error.message);\n  } finally {\n    spinner.stop();\n  }\n}\n\n// -------Create-interface----\n\nasync function createMovieCard(id) {\n  try {\n    const response = await fetchMovieById(id);\n    refs.modalFilm.innerHTML = '';\n    render(response);\n  } catch (error) {\n    closeModalFilm();\n    Notify.failure('Sorry, movie not found. Please try again.');\n  }\n}\n\n// ---Render--\nfunction render(response) {\n  const detailsCard = getModalMovieCardMarkup(response);\n  refs.modalFilm.insertAdjacentHTML('beforeend', detailsCard);\n\n  return response;\n}\n\n// ------Markup----\n\nconst getModalMovieCardMarkup = ({\n  id,\n  title,\n  original_title,\n  overview,\n  poster_path,\n  vote_average,\n  vote_count,\n  popularity,\n  genres,\n}) => {\n  const genresList = genres.map(genre => genre.name).join(', ');\n\n  const watchedFilmsArray = loadFromLocalStorage(WATCHED_FILM);\n  const queuedFilmsArray = loadFromLocalStorage(QUEUED_FILM);\n  const currentWatchedFilm = watchedFilmsArray.includes(id);\n  const currentQueuedFilm = queuedFilmsArray.includes(id);\n\n  let textBtnWatched = 'ADD TO WATCHED';\n  let textBtnQueue = 'ADD TO QUEUE';\n\n  if (currentWatchedFilm) {\n    textBtnWatched = 'REMOVE FROM WATCHED';\n  }\n\n  if (currentQueuedFilm) {\n    textBtnQueue = 'REMOVE FROM QUEUE';\n  }\n\n  return `\n  <button\n      type=\"button\"\n      class=\"modal-film__close-button close-modal__btn\"\n    >\n    <div class=\"close-modal__btn-inner\">\n    <span class=\"close-modal__btn-text\">Back\n    </span> </div>\n    </button>\n  <div class=\"modal-film__card\"  id=\"${id}\">\n  <div class=\"modal-film-card-wrapper\">\n  <picture class=\"modal-film__img>\n  <source media=\"(min-width:1024px)\" srcset=\"https://image.tmdb.org/t/p/w500${poster_path}\">\n  <source media=\"(min-width:768px)\"  srcset=\"https://image.tmdb.org/t/p/w400${poster_path}\">\n  <img class=\"img-film__poster\" src=\"https://image.tmdb.org/t/p/w300${poster_path}\"  \"alt=\"${title}\" loading=\"lazy\"  >\n</picture>\n</div>\n<div class=\"movie-info\">\n  <h2 class=\"film-title\">${title}</h2>\n  <ul class=\"film-title__list-film\">\n  <li class=\"film-title__item-film\"><p class=\"film-title__value\" >Vote / Votes </p><p class=\"film-title__desc-film\"><span class=\"film-title__vote_average\">${vote_average}</span><span class=\"film-title__slash\">/</span><span class=\"film-title__vote_count\">${vote_count}</span> </p> </li>\n  <li class=\"film-title__item-film\"><p class=\"film-title__value\">Popularity</p><p class=\"film-title__desc-film\">${popularity}</p></li>\n  <li class=\"film-title__item-film\"><p class=\"film-title__value\">Original Title</p><p class=\"film-title__desc-film\">${original_title}</p></li>\n  <li class=\"film-title__item-film\"><p class=\"film-title__value\">Genre</p><p class=\"film-title__desc-film\">${genresList}</p></li>\n \n  </ul>\n  <h3 class=\"about-title\">About ${original_title}</h3>\n  <p class=\"text-about-movie\">${overview}</p>\n\n  <ul class=\"modal-window_list-btn\">\n      <li class=\"modal-window_list-item-btn \"><button aria-label=\"add or remove from watched\" class=\"active modal-window__watched-btn js-add-watched\" type=\"button\" data-id=${id}>${textBtnWatched}</button></li>\n      <li class=\"modal-window_list-item-btn \"><button aria-label=\"add or remove from queue\" class=\"active modal-window__queued-btn js-add-queue\" type=\"button\" data-id=${id}>${textBtnQueue}</button></li>\n    </ul>\n  </div>\n`;\n};\n","import FetchApiMovies from './api';\nimport { clearMoviesContainer } from './renderCards';\nimport { renderMoviesCard } from './renderCards';\nimport { spinner } from './spinner';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  cardList: document.querySelector('.gallery__list'),\n  formSearch: document.querySelector('.header__form'),\n  notification: document.querySelector('.header__notification'),\n};\nconst target = document.getElementById('foo'); //spinner\n\nconst fetchSearchApi = new FetchApiMovies();\nrefs.formSearch.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n\n  refs.notification.textContent = '';\n  fetchSearchApi.query = e.currentTarget.elements.searchQuery.value\n    .trim()\n    .toLowerCase();\n  if (fetchSearchApi.query === '') {\n    Notify.info(\n      'Search result not successful. Enter the correct movie name and try again.'\n    );\n    return;\n  }\n  getSearchMovies();\n}\nasync function getSearchMovies() {\n  try {\n    spinner.spin(target); //spinner\n    const data = await fetchSearchApi.fetchSearchMovies();\n    const cards = data.results;\n    console.log(cards);\n    renderMoviesCard(cards);\n    console.log(data);\n    clearMoviesContainer();\n    renderMoviesCard(cards);\n    if (data.total_results === 0) {\n      Notify.info(\n        'Search result not successful. Enter the correct movie name and try again.'\n      );\n      return;\n    }\n  } catch (error) {\n    Notify.info(\n      'Search result not successful. Enter the correct movie name and try again.'\n    );\n  } finally {\n    //spinner\n    spinner.stop();\n  }\n}\n","// import { database } from './js/firebase-module';\n\nimport './sass/index.scss';\nimport './js/home-page';\nimport './js/about-team-modal';\nimport './js/movie-card-modal';\nimport 'basiclightbox/dist/basicLightbox.min.css';\nimport { onFormSubmit } from './js/search-movies';\nimport { btnUp } from './js/button-up';\n\nbtnUp.addEventListener();\n"],"names":["$b7ONl","parcelRequire","$vUagc","$3f7698770ed19e9c$export$f48ccfcd8b08d9f9","cards","$3f7698770ed19e9c$var$refs","cardList","insertAdjacentHTML","async","localStorage","key","$3f7698770ed19e9c$var$GENRE_KEY","$3f7698770ed19e9c$var$saveToLocalStorage","map","card","id","title","poster_path","genre_ids","release_date","genres","list","$3f7698770ed19e9c$var$genreList","filter","obj","includes","g","name","length","join","$3f7698770ed19e9c$var$loadGenres","slice","$3f7698770ed19e9c$var$createMoviesCard","$3f7698770ed19e9c$export$cba41b50396d8e3","innerHTML","document","querySelector","$e0d740ca6c7bcb9c$var$target","getElementById","$e0d740ca6c7bcb9c$var$fetchApiHomeContent","default","$j1lrD","spinner","spin","fetchPopularMovies","results","countOfItems","Math","ceil","items","i","li","createElement","li_0","$e0d740ca6c7bcb9c$var$pagination","appendChild","push","li_2","li_1","li_max","showPage","active","item","classList","remove","add","start","end","addEventListener","this","e","console","log","stop","$e0d740ca6c7bcb9c$var$showPopularMovies","$dIxxU","$aba151205406d0ea$var$target","$aba151205406d0ea$var$refs","modalFilmBackdrop","modalFilm","cardFilm","cardFilmLibrary","$aba151205406d0ea$var$onModalLibraryBtnsClick","btn","target","filmId","Number","dataset","contains","$4LMMA","checkLocalStorageMovies","WATCHED_FILM","QUEUED_FILM","$aba151205406d0ea$var$closeModalFilm","window","removeEventListener","$aba151205406d0ea$var$onCloseEscBtn","$aba151205406d0ea$var$onCloseModalFilmByBtn","body","code","$aba151205406d0ea$var$fetchMovieById","idMovie","response","get","data","error","message","$aba151205406d0ea$var$render","detailsCard","$aba151205406d0ea$var$getModalMovieCardMarkup","idCard","closest","then","fetchMoviesTrailers","markupTrailer","$ijpk6","markupMovieTrailer","catch","currentTarget","original_title","overview","vote_average","vote_count","popularity","genresList","genre","watchedFilmsArray","loadFromLocalStorage","queuedFilmsArray","textBtnWatched","textBtnQueue","$fa87a014714d34b9$var$refs","formSearch","notification","$fa87a014714d34b9$var$target","$fa87a014714d34b9$var$fetchSearchApi","preventDefault","textContent","query","elements","searchQuery","value","trim","toLowerCase","$h6c0i","Notify","info","fetchSearchMovies","total_results","$fa87a014714d34b9$var$getSearchMovies","btnUp"],"version":3,"file":"index.d1d41f95.js.map"}