{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,S,yCAMO,MAAMC,EAAO,CAClBC,WAAYC,SAASC,cAAc,gBACnCC,SAAUF,SAASC,cAAc,cACjCE,eAAgBH,SAASC,cAAc,oBACvCG,iBAAkBJ,SAASC,cAAc,+BAG9BI,EAASL,SAASM,eAAe,OAExCC,EAAiB,IAAI,EAAAX,EAAAY,SAE3BV,EAAKC,WAAWU,iBAAiB,QAASC,GAE1C,IACIC,EADAC,EAAa,GAGVC,eAAeH,IACpBE,EAAa,GAEbd,EAAKC,WAAWe,UAAUC,IAAI,cAC9BjB,EAAKI,SAASY,UAAUE,OAAO,cAE/B,IACEC,EAAAC,QAAQC,KAAKd,GAEb,MAAMe,GAAgB,EAAAC,EAAAC,sBAAqBD,EAAAE,cAE3C,IAAK,IAAIC,EAAI,EAAGA,EAAIJ,EAAcK,OAAQD,IAAK,CAC7Cb,EAAUS,EAAcI,GACxB,MAAME,QAAgBnB,EAAeoB,cAAchB,GAEnDC,EAAWgB,KAAKF,EAElB,CACA,GAAKN,GAAkBS,OAAOC,KAAKV,GAAeK,OAK3C,CACLM,IACA,MAAMC,EAASC,EAAiBrB,GAChCd,EAAKK,eAAe+B,mBAAmB,YAAaF,EACtD,KAT0D,CACxDlC,EAAKM,iBAAiB+B,UAAY,GAClCJ,IACA,MAAMK,EAAgBC,IACtBvC,EAAKM,iBAAiB8B,mBAAmB,YAAaE,EACxD,CASF,CAJE,MAAOE,GACPC,QAAQC,IAAIF,EAAMG,QACpB,SACExB,EAAAC,QAAQwB,MACV,CACF,CAcO,SAASL,IACd,MAAO,6bAgBT,CAEO,SAASN,IACdjC,EAAKK,eAAegC,UAAY,EAClC,CAcO,SAASF,EAAiBU,EAAQ,IACvC,OAAOA,EACJC,KAAIC,IACH,MAAMC,GAAEA,EAAEC,MAAEA,EAAKC,YAAEA,EAAWC,OAAEA,EAAMC,aAAEA,EAAYC,cAAEA,GACpDN,EACIO,EAA+BH,EAAOL,KAAIS,GAASA,EAAMC,OAhB5CC,QAAO,CAACC,EAAKH,EAAOI,EAAOC,IAC5CA,EAAIjC,OAAS,EACT,GAAGiC,EAAI,OAAOA,EAAI,aAElBA,EAAIC,KAAK,OAIhB,IASC,MAAO,kCAAkCb,4KAGoCE,4FACDA,kFACVA,WAAqBD,gIAI9DA,GAAgBI,4CACfL,KACxBM,GAAoC,WAChC,IAAIQ,KAAKV,GAAcW,6CAEzB,IAELF,KAAK,GACV,CC/HA/D,EAAAC,EAAA,S,qCAYO,MAAMiE,EAAO,CAClB/D,WAAYC,SAASC,cAAc,gBACnCC,SAAUF,SAASC,cAAc,cACjCE,eAAgBH,SAASC,cAAc,oBACvCG,iBAAkBJ,SAASC,cAAc,+BAGrC8D,EAAiB,IAAI,EAAAnE,EAAAY,SAE3BsD,EAAK5D,SAASO,iBAAiB,SAKxBI,iBACLmD,EAAa,GAEbF,EAAK/D,WAAWe,UAAUE,OAAO,cACjC8C,EAAK5D,SAASY,UAAUC,IAAI,cAE5B,IACEE,EAAAC,QAAQC,KAAKd,GAEb,MAAMe,GAAgB,EAAAC,EAAAC,sBAAqBD,EAAA4C,aAE3C,IAAK,IAAIzC,EAAI,EAAGA,EAAIJ,EAAcK,OAAQD,IAAK,CAC7C0C,EAAU9C,EAAcI,GACxB,MAAME,QAAgBqC,EAAepC,cAAcuC,GAEnDF,EAAWpC,KAAKF,EAElB,CACA,GAAKN,GAAkBS,OAAOC,KAAKV,GAAeK,OAK3C,CACLM,IACA,MAAMC,EAASC,EAAiB+B,GAChCF,EAAK3D,eAAe+B,mBAAmB,YAAaF,EACtD,KAT0D,CACxD8B,EAAK1D,iBAAiB+B,UAAY,GAClCJ,IACA,MAAMK,EDuBH,8bCtBH0B,EAAK1D,iBAAiB8B,mBAAmB,YAAaE,EACxD,CASF,CAJE,MAAOE,GACPC,QAAQC,IAAIF,EAAMG,QACpB,SACExB,EAAAC,QAAQwB,MACV,CACF,IApCA,IACIwB,EADAF,EAAa,GCvBjB,IAAAG,EAAAtE,EAAA,S,2FAgBA,MAAMuE,EAASpE,SAASM,eAAe,OAEjC+D,EAAO,CACXC,kBAAmBtE,SAASC,cAAc,qBAC1CsE,UAAWvE,SAASC,cAAc,eAClCuE,gBAAiBxE,SAASC,cAAc,uBAQ1C,SAASwE,EAAgBC,GACvBL,EAAKC,kBAAkBxD,UAAUE,OAAO,aACxCqD,EAAKE,UAAUzD,UAAUE,OAAO,aAChChB,SAAS2E,KAAK7D,UAAUC,IAAI,aAE5Bf,SAASS,iBAAiB,QAASmE,GACnCC,OAAOpE,iBAAiB,UAAWqE,GAEnC,MAAMC,EAASL,EAAEM,OAAOC,QAAQ,qBAsClCpE,eAA+BiC,GAC7B,IACE7B,EAAAC,QAAQC,KAAKiD,GACb,MAAMc,QA4CVrE,eAA8BsE,GAC5B,IACE,MAAMD,QAAiBf,EAAA3D,QAAM4E,IAC3B,sCAAsCD,6DAExC,aAAaD,EAASG,IAGxB,CAFE,MAAO/C,GACPC,QAAQC,IAAIF,EAAMG,QACpB,CACF,CArD2B6C,CAAexC,GACtCuB,EAAKE,UAAUpC,UAAY,GAuD/B,SAAgB+C,GACd,MAAMK,EAAcC,EAAwBN,GAC5Cb,EAAKE,UAAUrC,mBAAmB,YAAaqD,EACjD,CAxDIE,CAAOP,EAOT,CANE,MAAO5C,GACPC,QAAQC,IAAIF,EAAMG,SAClBiD,IACAC,EAAAC,OAAOC,QAAQ,4CACjB,SACE5E,EAAAC,QAAQwB,MACV,CACF,CAnDEoD,CAAgBf,EAAOjC,IAElBuB,EAAKC,kBAAkBxD,UAAUiF,SAAS,cAC7C1B,EAAKE,UAAU9D,iBAAiB,QAASuF,IAIjB,IAAI,EAAApG,EAAAY,UAE3ByF,oBAAoBlB,EAAOjC,IAC3BoD,MAAKb,IAIJ,GAHA9C,QAAQC,IAAI6C,GAGgB,IAAxBA,EAAKc,QAAQ1E,OACf,OAEczB,SAASC,cAAc,4BAC/Be,SACR,MAAMoF,GAAgB,EAAAC,EAAAC,oBAAmBjB,EAAKc,QAAQ,GAAGI,KACzDlC,EAAKE,UAAUrC,mBAAmB,aAAckE,EAAA,IAEjDI,OAAMlE,GAASC,QAAQC,IAAIF,IAEhC,CAEA,SAAS0D,EAAwBtB,GAC/B,MAAM+B,EAAM/B,EAAEM,OACR0B,EAASC,OAAOjC,EAAEM,OAAO4B,QAAQ9D,IAEnC4B,EAAEM,OAAOlE,UAAUiF,SAAS,mBAC9B,EAAA1E,EAAAwF,yBAAwBJ,EAAKC,EAAQrF,EAAAE,cAC5BmD,EAAEM,OAAOlE,UAAUiF,SAAS,kBACrC,EAAA1E,EAAAwF,yBAAwBJ,EAAKC,EAAQrF,EAAA4C,YAEzC,CAkBA,SAASyB,IACPb,OAAOiC,oBAAoB,UAAWhC,GACtC9E,SAAS8G,oBAAoB,QAASlC,GACtCP,EAAKC,kBAAkBxD,UAAUC,IAAI,aACrCsD,EAAKE,UAAUzD,UAAUC,IAAI,aAC7Bf,SAAS2E,KAAK7D,UAAUE,OAAO,YACjC,CAEA,SAAS4D,EAAsBF,IAE3BA,EAAEM,OAAOlE,UAAUiF,SAAS,0BAC5BrB,EAAEM,OAAOlE,UAAUiF,SAAS,2BAC5BrB,EAAEM,OAAOlE,UAAUiF,SAAS,2BAE5BL,GAEJ,CAQA,SAASZ,EAAcJ,GAEN,WAAXA,EAAEqC,MACJrB,GAEJ,CAhGArB,EAAKG,gBAAgB/D,iBAAiB,QAASgE,GAE/CJ,EAAKG,gBAAgB/D,iBAAiB,QAASgE,GAC/CJ,EAAKC,kBAAkB7D,iBAAiB,SAkFxC,SAAyBiE,GACnBA,EAAEsC,gBAAkBtC,EAAEM,QACxBU,GAEJ,IA4BA,MAAMF,EAA0B,EAAC1C,GAC/BA,EAAEC,MACFA,EAAKkE,eACLA,EAAcC,SACdA,EAAQlE,YACRA,EAAWmE,aACXA,EAAYC,WACZA,EAAUC,WACVA,EAAUpE,OACVA,MAEA,MAAMqE,EAAarE,EAAOL,KAAIS,GAASA,EAAMC,OAAMK,KAAK,MAElD4D,GAAoB,EAAAlG,EAAAC,sBAAqBD,EAAAE,cACzCiG,GAAmB,EAAAnG,EAAAC,sBAAqBD,EAAA4C,aAI9C,IAAIwD,EAAiB,iBACjBC,EAAe,eACfC,EAAiB,eACjBC,EAAiB,eAYrB,OAlB2BL,EAAkBM,SAAS/E,KASpD2E,EAAiB,sBACjBE,EAAiB,IATOH,EAAiBK,SAAS/E,KAalD4E,EAAe,oBACfE,EAAiB,IAGZ,uRASgC9E,uKAGuCE,sFACAA,8EACRA,aAAuBD,wGAIlEA,gNAEkIoE,wFAAmGC,0IAC9IC,qIACIJ,4HACTK,4DAE3EL,2CACFC,8JAGqES,qEAAkF7E,KAAM2E,uHAC1FG,kEAA+E9E,KAAM4E,4CAGvL,E,yDCpMHI,MAAMrH,mBAENC,IAEAO,EAAAC,QAAQC,KAAKd,GACbwE,OAAOpE,iBAAiB,QAAQ,SAAUiE,GACxCzD,EAAAC,QAAQwB,MACV,G","sources":["src/js/watched-library.js","src/js/queue-library.js","src/js/movie-modal-library.js","src/my-library.js"],"sourcesContent":["import FetchApiMovies from './api';\nimport { Spinner } from 'spin.js';\nimport { spinner } from './spinner';\n\nimport { WATCHED_FILM, loadFromLocalStorage } from './local-storage';\n\nexport const refs = {\n  watchedBtn: document.querySelector('.watched-btn'),\n  queueBtn: document.querySelector('.queue-btn'),\n  galleryLibrary: document.querySelector('.gallery-library'),\n  containerNothing: document.querySelector('.container-library-nothing'),\n};\n\nexport const target = document.getElementById('foo');\n\nconst fetchMovieById = new FetchApiMovies();\n\nrefs.watchedBtn.addEventListener('click', onWatchedLibrary);\n\nlet movieIdObj = [];\nlet movieId;\n\nexport async function onWatchedLibrary() {\n  movieIdObj = [];\n  // console.log('click');\n  refs.watchedBtn.classList.add('btn-active');\n  refs.queueBtn.classList.remove('btn-active');\n\n  try {\n    spinner.spin(target);\n\n    const moviesIdArray = loadFromLocalStorage(WATCHED_FILM);\n\n    for (let i = 0; i < moviesIdArray.length; i++) {\n      movieId = moviesIdArray[i];\n      const byMovie = await fetchMovieById.fetchIdMovies(movieId);\n\n      movieIdObj.push(byMovie);\n      // console.log(movieIdObj);\n    }\n    if (!moviesIdArray || !Object.keys(moviesIdArray).length) {\n      refs.containerNothing.innerHTML = '';\n      clearMoviesCard();\n      const markupNothing = createMarkupWhenLocalStorageEmpty();\n      refs.containerNothing.insertAdjacentHTML('beforeend', markupNothing);\n    } else {\n      clearMoviesCard();\n      const markup = createMoviesCard(movieIdObj);\n      refs.galleryLibrary.insertAdjacentHTML('beforeend', markup);\n    }\n  } catch (error) {\n    console.log(error.message);\n  } finally {\n    spinner.stop();\n  }\n}\n\n// export async function fetchMovieById(movieId) {\n//   try {\n//     const response = await axios.get(\n//       `https://api.themoviedb.org/3/movie/${movieId}?api_key=9fae0fdf266213c68361ca578a95b948&language=en-US`\n//     );\n//     // console.log(response.data);\n\n//     return await response.data;\n//   } catch (error) {\n//     console.log(error.message);\n//   }\n// }\nexport function createMarkupWhenLocalStorageEmpty() {\n  return `\n  <div class=\"container-nothing\">\n      <div class=\"container-nothing__content\">\n        <h2 class=\"container-nothing__title\">Your library is empty!</h2>\n        <p class=\"container-nothing__text\">\n          <a\n            title=\"Link to main page\"\n            class=\"container-nothing__link\"\n            href=\"./index.html\"\n            >GO TO</a\n          >\n          movie selection.\n        </p>\n      </div>\n    </div>\n    `;\n}\n\nexport function clearMoviesCard() {\n  refs.galleryLibrary.innerHTML = '';\n}\n\nfunction concatGenres(arrOfGenresName) {\n  return arrOfGenresName.reduce((acc, genre, index, arr) => {\n    if (arr.length > 2) {\n      acc = `${arr[0]}, ${arr[1]}, Others`;\n    } else {\n      acc = arr.join(', ');\n    }\n\n    return acc;\n  }, '');\n}\n\nexport function createMoviesCard(cards = []) {\n  return cards\n    .map(card => {\n      const { id, title, poster_path, genres, release_date, original_name } =\n        card;\n      const genresForRender = concatGenres(genres.map(genre => genre.name));\n      return `<li class=\"home-card__link\" id=${id}>\n\t\t</div class = \"home-card__thumb\">\n\t\t<picture class=\"home-card__poster\">\n\t\t\t\t  <source media=\"(min-width:1280px)\"  srcset=\"https://image.tmdb.org/t/p/w500${poster_path}\">\n\t\t\t\t  <source media=\"(min-width:768px)\"  srcset=\"https://image.tmdb.org/t/p/w400${poster_path}\">\n\t\t\t\t  <img class=\"home-card__img\" src=\"https://image.tmdb.org/t/p/w300${poster_path}\" alt=\"${title}\" loading=\"lazy\">\n\t\t\t  </picture>\n\t\t\t  </div>\n\t\t\t  <div class=\"card__content\">\n\t\t\t  <h2 class=\"card__title\">${title ? title : original_name}</h2>\n\t\t\t  <p class='card__text' id=${id}>${\n        genresForRender ? genresForRender : '---'\n      } | ${new Date(release_date).getFullYear()} </p>\n\t\t</div>\n\t\t  </li>`;\n    })\n    .join('');\n}\n","import FetchApiMovies from './api';\nimport { Spinner } from 'spin.js';\nimport { spinner } from './spinner';\n// import { fetchMovieById } from './watched-library';\nimport {\n  target,\n  createMoviesCard,\n  createMarkupWhenLocalStorageEmpty,\n  clearMoviesCard,\n} from './watched-library';\nimport { loadFromLocalStorage, QUEUED_FILM } from './local-storage';\n\nexport const refs = {\n  watchedBtn: document.querySelector('.watched-btn'),\n  queueBtn: document.querySelector('.queue-btn'),\n  galleryLibrary: document.querySelector('.gallery-library'),\n  containerNothing: document.querySelector('.container-library-nothing'),\n};\n\nconst fetchMovieById = new FetchApiMovies();\n\nrefs.queueBtn.addEventListener('click', onQueueLibrary);\n\nlet movieIdObj = [];\nlet movieId;\n\nexport async function onQueueLibrary() {\n  movieIdObj = [];\n  // console.log('click');\n  refs.watchedBtn.classList.remove('btn-active');\n  refs.queueBtn.classList.add('btn-active');\n\n  try {\n    spinner.spin(target);\n\n    const moviesIdArray = loadFromLocalStorage(QUEUED_FILM);\n\n    for (let i = 0; i < moviesIdArray.length; i++) {\n      movieId = moviesIdArray[i];\n      const byMovie = await fetchMovieById.fetchIdMovies(movieId);\n\n      movieIdObj.push(byMovie);\n      // console.log(movieIdObj);\n    }\n    if (!moviesIdArray || !Object.keys(moviesIdArray).length) {\n      refs.containerNothing.innerHTML = '';\n      clearMoviesCard();\n      const markupNothing = createMarkupWhenLocalStorageEmpty();\n      refs.containerNothing.insertAdjacentHTML('beforeend', markupNothing);\n    } else {\n      clearMoviesCard();\n      const markup = createMoviesCard(movieIdObj);\n      refs.galleryLibrary.insertAdjacentHTML('beforeend', markup);\n    }\n  } catch (error) {\n    console.log(error.message);\n  } finally {\n    spinner.stop();\n  }\n}\n","import axios from 'axios';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { genres } from './Templates/genres';\nimport { Spinner } from 'spin.js';\nimport { spinner } from './spinner';\n// для трейлера до фільму у модалці\nimport FetchApiMovies from './api';\nimport { markupMovieTrailer } from './markup-trailer';\nimport {\n  WATCHED_FILM,\n  QUEUED_FILM,\n  loadFromLocalStorage,\n  saveToLocalStorage,\n  checkLocalStorageMovies,\n} from './local-storage';\n\nconst target = document.getElementById('foo');\n\nconst refs = {\n  modalFilmBackdrop: document.querySelector('[data-modal-film]'),\n  modalFilm: document.querySelector('.modal-film'),\n  cardFilmLibrary: document.querySelector('.container-library'),\n};\n\nrefs.cardFilmLibrary.addEventListener('click', onOpenModalFilm);\n\nrefs.cardFilmLibrary.addEventListener('click', onOpenModalFilm);\nrefs.modalFilmBackdrop.addEventListener('click', onBackdropClick);\n\nfunction onOpenModalFilm(e) {\n  refs.modalFilmBackdrop.classList.remove('is-hidden');\n  refs.modalFilm.classList.remove('is-hidden');\n  document.body.classList.add('no-scroll');\n\n  document.addEventListener('click', onCloseModalFilmByBtn);\n  window.addEventListener('keydown', onCloseEscBtn);\n\n  const idCard = e.target.closest('.home-card__link');\n  createMovieCard(idCard.id);\n\n  if (!refs.modalFilmBackdrop.classList.contains('is-hidden')) {\n    refs.modalFilm.addEventListener('click', onModalLibraryBtnsClick);\n  }\n\n  // ------ trailer movie-------\n  const boxFetchApiMovies = new FetchApiMovies();\n  boxFetchApiMovies\n    .fetchMoviesTrailers(idCard.id)\n    .then(data => {\n      console.log(data);\n      // перевірка якщо пустий масив\n      // показувати картинку\n      if (data.results.length === 0) {\n        return;\n      }\n      const picture = document.querySelector('.modal-film-card-wrapper');\n      picture.remove();\n      const markupTrailer = markupMovieTrailer(data.results[0].key);\n      refs.modalFilm.insertAdjacentHTML('afterbegin', markupTrailer);\n    })\n    .catch(error => console.log(error));\n  // ------------ end treiler movie -------------\n}\n\nfunction onModalLibraryBtnsClick(e) {\n  const btn = e.target;\n  const filmId = Number(e.target.dataset.id);\n\n  if (e.target.classList.contains('js-add-watched')) {\n    checkLocalStorageMovies(btn, filmId, WATCHED_FILM);\n  } else if (e.target.classList.contains('js-add-queue')) {\n    checkLocalStorageMovies(btn, filmId, QUEUED_FILM);\n  }\n}\n\nasync function createMovieCard(id) {\n  try {\n    spinner.spin(target);\n    const response = await fetchMovieById(id);\n    refs.modalFilm.innerHTML = '';\n\n    render(response);\n  } catch (error) {\n    console.log(error.message);\n    closeModalFilm();\n    Notify.failure('Sorry, movie not found. Please try again.');\n  } finally {\n    spinner.stop();\n  }\n}\n\nfunction closeModalFilm() {\n  window.removeEventListener('keydown', onCloseEscBtn);\n  document.removeEventListener('click', onCloseModalFilmByBtn);\n  refs.modalFilmBackdrop.classList.add('is-hidden');\n  refs.modalFilm.classList.add('is-hidden');\n  document.body.classList.remove('no-scroll');\n}\n\nfunction onCloseModalFilmByBtn(e) {\n  if (\n    e.target.classList.contains('close-modal__btn-text') ||\n    e.target.classList.contains('close-modal__btn-inner') ||\n    e.target.classList.contains('close-modal__btn-text')\n  ) {\n    closeModalFilm();\n  }\n}\n\nfunction onBackdropClick(e) {\n  if (e.currentTarget === e.target) {\n    closeModalFilm();\n  }\n}\n\nfunction onCloseEscBtn(e) {\n  // console.log(e.code);\n  if (e.code === 'Escape') {\n    closeModalFilm();\n  }\n}\n\nasync function fetchMovieById(idMovie) {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${idMovie}?api_key=9fae0fdf266213c68361ca578a95b948&language=en-US`\n    );\n    return await response.data;\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\n// ---Render--\nfunction render(response) {\n  const detailsCard = getModalMovieCardMarkup(response);\n  refs.modalFilm.insertAdjacentHTML('beforeend', detailsCard);\n}\n\n// ------Markup----\n\nconst getModalMovieCardMarkup = ({\n  id,\n  title,\n  original_title,\n  overview,\n  poster_path,\n  vote_average,\n  vote_count,\n  popularity,\n  genres,\n}) => {\n  const genresList = genres.map(genre => genre.name).join(', ');\n\n  const watchedFilmsArray = loadFromLocalStorage(WATCHED_FILM);\n  const queuedFilmsArray = loadFromLocalStorage(QUEUED_FILM);\n  const currentWatchedFilm = watchedFilmsArray.includes(id);\n  const currentQueuedFilm = queuedFilmsArray.includes(id);\n\n  let textBtnWatched = 'ADD TO WATCHED';\n  let textBtnQueue = 'ADD TO QUEUE';\n  let modal_active_w = 'modal-active';\n  let modal_active_q = 'modal-active';\n\n  if (currentWatchedFilm) {\n    textBtnWatched = 'REMOVE FROM WATCHED';\n    modal_active_w = '';\n  }\n\n  if (currentQueuedFilm) {\n    textBtnQueue = 'REMOVE FROM QUEUE';\n    modal_active_q = '';\n  }\n\n  return `\n    <button\n        type=\"button\"\n        class=\"modal-film__close-button close-modal__btn\"\n      >\n      <div class=\"close-modal__btn-inner\">\n      <span class=\"close-modal__btn-text\">Back\n      </span> </div>\n      </button>\n    <div class=\"modal-film__card\"  id=\"${id}\">\n    <div class=\"modal-film-card-wrapper\">\n    <picture class=\"modal-film__img>\n    <source media=\"(min-width:1024px)\" srcset=\"https://image.tmdb.org/t/p/w500${poster_path}\">\n    <source media=\"(min-width:768px)\"  srcset=\"https://image.tmdb.org/t/p/w400${poster_path}\">\n    <img class=\"img-film__poster\" src=\"https://image.tmdb.org/t/p/w300${poster_path}\"  \"alt=\"${title}\" loading=\"lazy\"  >\n  </picture>\n  </div>\n  <div class=\"movie-info\">\n    <h2 class=\"film-title\">${title}</h2>\n    <ul class=\"film-title__list-film\">\n    <li class=\"film-title__item-film\"><p class=\"film-title__value\" >Vote / Votes </p><p class=\"film-title__desc-film\"><span class=\"film-title__vote_average\">${vote_average}</span><span class=\"film-title__slash\">/</span><span class=\"film-title__vote_count\">${vote_count}</span> </p> </li>\n    <li class=\"film-title__item-film\"><p class=\"film-title__value\">Popularity</p><p class=\"film-title__desc-film\">${popularity}</p></li>\n    <li class=\"film-title__item-film\"><p class=\"film-title__value\">Original Title</p><p class=\"film-title__desc-film\">${original_title}</p></li>\n    <li class=\"film-title__item-film\"><p class=\"film-title__value\">Genre</p><p class=\"film-title__desc-film\">${genresList}</p></li>\n    </ul>\n    <h3 class=\"about-title\">About ${original_title}</h3>\n    <p class=\"text-about-movie\">${overview}</p>\n    \n     <ul class=\"modal-window_list-btn\">\n      <li class=\"modal-window_list-item-btn \"><button aria-label=\"add or remove from watched\" class=\"${modal_active_w} modal-window__watched-btn js-add-watched\" type=\"button\" data-id=${id}>${textBtnWatched}</button></li>\n      <li class=\"modal-window_list-item-btn \"><button aria-label=\"add or remove from queue\" class=\"${modal_active_q} modal-window__queued-btn js-add-queue\" type=\"button\" data-id=${id}>${textBtnQueue}</button></li>\n    </ul>\n    </div>\n  `;\n};\n","import './js/watched-library';\nimport './js/queue-library';\nimport './js/movie-modal-library';\nimport './js/about-team-modal';\nimport './js/switch-theme';\nimport { Spinner } from 'spin.js';\nimport { spinner } from './js/spinner';\nimport { btnUp } from './js/button-up';\nimport { onWatchedLibrary, target } from './js/watched-library';\n\n/// button-up\nbtnUp.addEventListener();\n////render watched gallery\nonWatchedLibrary();\n///spinner\nspinner.spin(target);\nwindow.addEventListener('load', function (e) {\n  spinner.stop();\n});\n"],"names":["$b7ONl","parcelRequire","$44ef74221443e4f6$export$21666b427502ea6d","watchedBtn","document","querySelector","queueBtn","galleryLibrary","containerNothing","$44ef74221443e4f6$export$44271b4f0c6a3563","getElementById","$44ef74221443e4f6$var$fetchMovieById","default","addEventListener","$44ef74221443e4f6$export$852075710b39decd","$44ef74221443e4f6$var$movieId","$44ef74221443e4f6$var$movieIdObj","async","classList","add","remove","$j1lrD","spinner","spin","moviesIdArray","$4LMMA","loadFromLocalStorage","WATCHED_FILM","i","length","byMovie","fetchIdMovies","push","Object","keys","$44ef74221443e4f6$export$64f23d4e983db80f","markup","$44ef74221443e4f6$export$8b2723ee49351d8","insertAdjacentHTML","innerHTML","markupNothing","$44ef74221443e4f6$export$f03c78e80b131f2e","error","console","log","message","stop","cards","map","card","id","title","poster_path","genres","release_date","original_name","genresForRender","genre","name","reduce","acc","index","arr","join","Date","getFullYear","$9ace1dda588c6489$export$21666b427502ea6d","$9ace1dda588c6489$var$fetchMovieById","$9ace1dda588c6489$var$movieIdObj","QUEUED_FILM","$9ace1dda588c6489$var$movieId","$dIxxU","$5d201852917eaf5e$var$target","$5d201852917eaf5e$var$refs","modalFilmBackdrop","modalFilm","cardFilmLibrary","$5d201852917eaf5e$var$onOpenModalFilm","e","body","$5d201852917eaf5e$var$onCloseModalFilmByBtn","window","$5d201852917eaf5e$var$onCloseEscBtn","idCard","target","closest","response","idMovie","get","data","$5d201852917eaf5e$var$fetchMovieById","detailsCard","$5d201852917eaf5e$var$getModalMovieCardMarkup","$5d201852917eaf5e$var$render","$5d201852917eaf5e$var$closeModalFilm","$h6c0i","Notify","failure","$5d201852917eaf5e$var$createMovieCard","contains","$5d201852917eaf5e$var$onModalLibraryBtnsClick","fetchMoviesTrailers","then","results","markupTrailer","$ijpk6","markupMovieTrailer","key","catch","btn","filmId","Number","dataset","checkLocalStorageMovies","removeEventListener","code","currentTarget","original_title","overview","vote_average","vote_count","popularity","genresList","watchedFilmsArray","queuedFilmsArray","textBtnWatched","textBtnQueue","modal_active_w","modal_active_q","includes","btnUp"],"version":3,"file":"my-library.35b4495f.js.map"}