{"mappings":"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","sources":["src/js/api.js","src/js/renderCards.js","src/js/home-page.js","src/js/movie-card-modal.js","src/js/markup-trailer.js","src/js/search-movies.js","src/index.js"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '9fae0fdf266213c68361ca578a95b948';\nexport default class FetchApiMovies {\n  constructor() {\n    this.searchQuery = '';\n    this.page = 1;\n    this.language = 'en-US';\n  }\n  // Реалізація для запиту на список найпопулярніших фільмів на сьогодні для створення колекції на головній сторінці:\n  async fetchPopularMovies() {\n    try {\n      const response = await axios.get(\n        `${BASE_URL}/trending/all/day?api_key=${API_KEY}&language=${this.language}&page=${this.page}`\n      );\n      return await response.data;\n    } catch (error) {\n      error;\n    }\n  }\n  // Реалізація для запиту фільму за ключовим словом на головній сторінці:\n  async fetchSearchMovies() {\n    try {\n      const response = await axios.get(\n        `${BASE_URL}/search/movie?api_key=${API_KEY}&language=${this.language}&page=${this.page}&query=${this.searchQuery}&include_adult=false`\n      );\n      return await response.data;\n    } catch (error) {\n      error;\n    }\n  }\n  // Реалізація для запиту повної інформації про кінофільм для сторінки кінофільму:\n  // Реалізація для запиту повної інформації про можливий трейлер на YouTube:\n  async fetchIdMovies(movieID) {\n    try {\n      const response = await axios.get(\n        `${BASE_URL}/movie/${movieID}?api_key=${API_KEY}&language=${this.language}`\n      );\n      return await response.data;\n    } catch (error) {\n      error;\n    }\n  }\n\n  // Реалізація для запиту за жанрами:\n  async fetchGenresMovies() {\n    try {\n      const response = await axios.get(\n        `${BASE_URL}/genre/movie/list?api_key=${API_KEY}&language=${this.language}`\n      );\n      return await response.data;\n    } catch (error) {\n      error;\n    }\n  }\n  // Fetch підвантаження трейлера до фільму для модального вікна\n  async fetchMoviesTrailers(id) {\n    try {\n      const response = await axios.get(\n        `${BASE_URL}/movie/${id}/videos?api_key=${API_KEY}&language=${this.language}&page=${this.page}`\n      );\n      return await response.data;\n    } catch (error) {\n      error;\n    }\n  }\n\n  incrementPage() {\n    return (this.page += 1);\n  }\n\n  decrementPage() {\n    if (this.page === 1) {\n      return;\n    }\n    return (this.page -= 1);\n  }\n\n  resetPage() {\n    this.page = 1;\n  }\n\n  get query() {\n    return this.searchQuery;\n  }\n\n  set query(newQuery) {\n    this.searchQuery = newQuery;\n  }\n\n  get pageNum() {\n    return this.page;\n  }\n\n  set pageNum(newPage) {\n    this.page = newPage;\n  }\n}\n","export function renderMoviesCard(cards) {\n  refs.cardList.insertAdjacentHTML('beforeend', createMoviesCard(cards));\n}\n\nexport function clearMoviesContainer() {\n  refs.cardList.innerHTML = '';\n}\n\nimport { genres } from './Templates/genres';\nconst refs = {\n  cardList: document.querySelector('.cards__list'),\n};\n\nconst GENRE_KEY = 'genres';\nlet genreList = genres;\n\nfunction loadGenres(genres) {\n  const list = genreList\n    .filter(obj => genres.includes(obj.id))\n    .map(g => g.name);\n  console.log('list :>> ', list);\n  return list.length > 2 ? `${list[0]}, ${list[1]}, Others` : list.join(', ');\n}\n\nasync function saveToLocalStorage() {\n  if (localStorage.key === GENRE_KEY) {\n    return;\n  }\n}\n\nfunction createMoviesCard(cards = []) {\n  saveToLocalStorage();\n  return cards\n    .map(card => {\n      const { id, title, poster_path, genre_ids, release_date } = card;\n      return `<li class=\"home-card__link\" id=${id}>\n\t\t\t  <div class = \"home-card__thumb\">\n\t\t\t  <picture class=\"home-card__poster\">\n\t\t\t\t\t\t<source media=\"(min-width:1280px)\"  srcset=\"https://image.tmdb.org/t/p/w500${poster_path}\">\n\t\t\t\t\t\t<source media=\"(min-width:768px)\"  srcset=\"https://image.tmdb.org/t/p/w400${poster_path}\">\n\t\t\t\t\t\t<img class=\"home-card__img\" src=\"https://image.tmdb.org/t/p/w300${poster_path}\" alt=\"${title}\" loading=\"lazy\">\n\t\t\t\t\t</picture>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"card__content\">\n\t\t\t\t<h2 class=\"card__title\">${title}</h2>\n\t\t\t\t<p class=\"card__text\">${loadGenres(genre_ids)} | ${new Date(\n        release_date\n      ).getFullYear()}</p>\n\t\t  </div>\n\t\t\t\t</li>`;\n    })\n    .join('');\n}\n","import FetchApiMovies from './api';\nimport { spinner } from './spinner';\nimport { renderMoviesCard } from './renderCards';\nimport { clearMoviesContainer } from './renderCards';\n\nconst target = document.getElementById('foo');\nconst fetchApiHomeContent = new FetchApiMovies();\n\nshowPopularMovies();\n\nlet pagination = document.querySelector('#pagination');\n\nlet notesOnePage = 10;\n\nasync function showPopularMovies() {\n  try {\n    spinner.spin(target);\n    const data = await fetchApiHomeContent.fetchPopularMovies();\n    const cards = data.results;\n    let countOfItems = Math.ceil(cards.length / notesOnePage);\n\n    let items = [];\n\n    for (let i = 1; i <= countOfItems; i++) {\n      let li = document.createElement('li');\n\n      if (i == 1) {\n        let li_0 = document.createElement('li');\n        li_0.innerHTML = '<li>&#8592;</li>';\n        pagination.appendChild(li_0);\n      }\n\n      if (countOfItems <= 5) {\n        li.innerHTML = i;\n        pagination.appendChild(li);\n        items.push(li);\n      }\n\n      if (countOfItems > 5) {\n        li.innerHTML = i;\n\n        pagination.appendChild(li);\n\n        items.push(li);\n\n        if (i == 1) {\n          let li_2 = document.createElement('li');\n          li_2.innerHTML = '...';\n          pagination.appendChild(li_2);\n        }\n        if (countOfItems - 1 == i) {\n          let li_1 = document.createElement('li');\n          li_1.innerHTML = '...';\n          pagination.appendChild(li_1);\n        }\n      }\n\n      if (i == countOfItems) {\n        let li_max = document.createElement('li');\n        li_max.innerHTML = '<li>&#8594;</li>';\n        pagination.appendChild(li_max);\n      }\n    }\n\n    let showPage = (function () {\n      let active;\n\n      return function (item) {\n        if (active) {\n          active.classList.remove('active');\n        }\n        active = item;\n\n        item.classList.add('active');\n\n        let pageNum = +item.innerHTML;\n        let start = (pageNum - 1) * notesOnePage;\n        let end = start + notesOnePage;\n        renderMoviesCard(cards.slice(start, end));\n      };\n    })();\n\n    showPage(items[0]);\n\n    for (let item of items) {\n      item.addEventListener('click', function () {\n        clearMoviesContainer();\n        showPage(this);\n      });\n    }\n  } catch (e) {\n    console.log(e);\n  } finally {\n    spinner.stop();\n  }\n}\n","import axios from 'axios';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { genres } from './Templates/genres';\n\nimport { spinner } from './spinner';\n\nimport {\n  WATCHED_FILM,\n  QUEUED_FILM,\n  loadFromLocalStorage,\n  saveToLocalStorage,\n} from './local-storage';\n\n\n// для трейлера до фільму у модалці\nimport FetchApiMovies from './api';\nimport { markupMovieTrailer } from './markup-trailer';\nconst target = document.getElementById('foo');\n\nconst refs = {\n  modalFilmBackdrop: document.querySelector('[data-modal-film]'),\n  modalFilm: document.querySelector('.modal-film'),\n  div: document.querySelector('.modal-film '),\n  cardFilm: document.querySelector('.cards__list'),\n  cardFilmLibrary: document.querySelector('.container-library'),\n};\n\nrefs.cardFilm.addEventListener('click', onOpenModalFilm);\nrefs.modalFilmBackdrop.addEventListener('click', onBackdropClick);\n\n// --------open/close-modal\n\nlet idMovie;\nlet currentMovie;\n\nfunction onOpenModalFilm(e) {\n  refs.modalFilmBackdrop.classList.remove('is-hidden');\n  refs.div.classList.remove('is-hidden');\n  document.body.classList.add('no-scroll');\n\n  document.addEventListener('click', onCloseModalFilmByBtn);\n  window.addEventListener('keydown', onCloseEscBtn);\n\n  const idCard = e.target.closest('.home-card__link').id;\n  console.log(idCard);\n  idMovie = Number(idCard);\n  console.log(idMovie);\n  createMovieCard(idCard);\n\n  fetchMovieById(idCard).then(response => {\n    refs.modalFilm.innerHTML = '';\n    return render(response);\n  });\n\n  if (!refs.modalFilmBackdrop.classList.contains('is-hidden')) {\n    refs.modalFilm.addEventListener('click', onModalLibraryBtnsClick);\n  }\n\n  // // ------ trailer movie-------\n  const boxFetchApiMovies = new FetchApiMovies();\n  boxFetchApiMovies\n    .fetchMoviesTrailers(idCard)\n    .then(data => {\n      console.log(data);\n      // перевірка якщо пустий масив\n      // показувати картинку\n      if (data.results.length === 0) {\n        return;\n      }\n      const picture = document.querySelector('.modal-film-card-wrapper');\n      picture.remove();\n      const markupTrailer = markupMovieTrailer(data.results[0].key);\n      refs.modalFilm.insertAdjacentHTML('afterbegin', markupTrailer);\n    })\n    .catch(error => console.log(error));\n  // // ------------ end treiler movie -------------\n}\n\nfunction onModalLibraryBtnsClick(e, idMovie) {\n  const a = Number(e.target.dataset.id);\n  console.log(a);\n  if (e.target.classList.contains('js-add-watched')) {\n    // checkLocalStorageWatchedMovies(e.target, currentMovie);\n    saveToLocalStorage(WATCHED_FILM, a);\n  } else if (e.target.classList.contains('js-add-queue')) {\n    // checkLocalStorageQueueMovies(e.target, currentMovie);\n    saveToLocalStorage(QUEUED_FILM, a);\n  }\n}\n\nfunction closeModalFilm() {\n  window.removeEventListener('keydown', onCloseEscBtn);\n  document.removeEventListener('click', onCloseModalFilmByBtn);\n  refs.modalFilmBackdrop.classList.add('is-hidden');\n  refs.div.classList.add('is-hidden');\n  document.body.classList.remove('no-scroll');\n}\n\nfunction onCloseModalFilmByBtn(e) {\n  if (\n    e.target.classList.contains('close-modal__btn-text') ||\n    e.target.classList.contains('close-modal__btn-inner') ||\n    e.target.classList.contains('close-modal__btn-text')\n  ) {\n    closeModalFilm();\n  }\n}\n\nfunction onBackdropClick(e) {\n  if (e.currentTarget === e.target) {\n    closeModalFilm();\n  }\n}\n\nfunction onCloseEscBtn(e) {\n  // console.log(e.code);\n  if (e.code === 'Escape') {\n    closeModalFilm();\n  }\n}\n\n// -----Fetch-by-id---\n\nasync function fetchMovieById(idMovie) {\n  try {\n    spinner.spin(target);\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${idMovie}?api_key=9fae0fdf266213c68361ca578a95b948&language=en-US`\n    );\n    // console.log(response.data);\n\n    return await response.data;\n  } catch (error) {\n    console.log(error.message);\n  } finally {\n    spinner.stop();\n  }\n}\n\n// -------Create-interface----\n\nasync function createMovieCard(id) {\n  try {\n    const response = await fetchMovieById(id);\n\n    // console.log(id);\n    refs.modalFilm.innerHTML = '';\n\n    render(response);\n  } catch (error) {\n    closeModalFilm();\n    Notify.failure('Sorry, movie not found. Please try again.');\n  }\n}\n\n// ---Render--\nfunction render(response) {\n  const detailsCard = getModalMovieCardMarkup(response);\n  refs.modalFilm.insertAdjacentHTML('beforeend', detailsCard);\n\n  return response;\n}\n\n// console.log(response);\n\n// ------Markup----\n\nconst getModalMovieCardMarkup = ({\n  id,\n  title,\n  original_title,\n  overview,\n  poster_path,\n  vote_average,\n  vote_count,\n  popularity,\n  genres,\n}) => {\n  const genresList = genres.map(genre => genre.name).join(', ');\n\n  return `\n  <button\n      type=\"button\"\n      class=\"modal-film__close-button close-modal__btn\"\n    >\n    <div class=\"close-modal__btn-inner\">\n    <span class=\"close-modal__btn-text\">Back\n    </span> </div>\n    </button>\n  <div class=\"modal-film__card\"  id=\"${id}\">\n  <div class=\"modal-film-card-wrapper\">\n  <picture class=\"modal-film__img>\n  <source media=\"(min-width:1024px)\" srcset=\"https://image.tmdb.org/t/p/w500${poster_path}\">\n  <source media=\"(min-width:768px)\"  srcset=\"https://image.tmdb.org/t/p/w400${poster_path}\">\n  <img class=\"img-film__poster\" src=\"https://image.tmdb.org/t/p/w300${poster_path}\"  \"alt=\"${title}\" loading=\"lazy\"  >\n</picture>\n</div>\n<div class=\"movie-info\">\n  <h2 class=\"film-title\">${title}</h2>\n  <ul class=\"film-title__list-film\">\n  <li class=\"film-title__item-film\"><p class=\"film-title__value\" >Vote / Votes </p><p class=\"film-title__desc-film\"><span class=\"film-title__vote_average\">${vote_average}</span><span class=\"film-title__slash\">/</span><span class=\"film-title__vote_count\">${vote_count}</span> </p> </li>\n  <li class=\"film-title__item-film\"><p class=\"film-title__value\">Popularity</p><p class=\"film-title__desc-film\">${popularity}</p></li>\n  <li class=\"film-title__item-film\"><p class=\"film-title__value\">Original Title</p><p class=\"film-title__desc-film\">${original_title}</p></li>\n  <li class=\"film-title__item-film\"><p class=\"film-title__value\">Genre</p><p class=\"film-title__desc-film\">${genresList}</p></li>\n  </ul>\n  <h3 class=\"about-title\">About ${original_title}</h3>\n  <p class=\"text-about-movie\">${overview}</p>\n\n  <ul class=\"modal-window_list-btn\">\n      <li class=\"modal-window_list-item-btn\"><button class=\"modal-window__watched-btn js-add-watched\" type=\"button\" data-id=${id}>add to Watched</button></li>\n      <li class=\"modal-window_list-item-btn\"><button class=\"modal-window__queued-btn js-add-queue\" type=\"button\" data-id=${id}>Add to queue</button></li>\n    </ul>\n  </div>\n`;\n};\n","export function markupMovieTrailer(youtubeKeyId) {\n  return `\n    <iframe id=\"trailer\" class=\"player\" width=\"420\" height=\"315\" allowfullscreen=\"allowfullscreen\"\n    src=\"https://www.youtube.com/embed/${youtubeKeyId}\"\n    frameborder=\"0\"></iframe>\n  `;\n}\n","import FetchApiMovies from './api';\nimport { clearMoviesContainer } from './renderCards';\nimport { renderMoviesCard } from './renderCards';\nimport { spinner } from './spinner';\n\nconst refs = {\n  cardList: document.querySelector('.gallery__list'),\n  formSearch: document.querySelector('.header__form'),\n  notification: document.querySelector('.header__notification'),\n};\nconst target = document.getElementById('foo'); //spinner\n\nconst fetchSearchApi = new FetchApiMovies();\nrefs.formSearch.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n\n  refs.notification.textContent = '';\n  fetchSearchApi.query = e.currentTarget.elements.searchQuery.value\n    .trim()\n    .toLowerCase();\n  if (fetchSearchApi.query === '') {\n    return notification();\n  }\n  getSearchMovies();\n}\n\nfunction notification() {\n  refs.notification.textContent =\n    'Search result not successful. Enter the correct movie name and try again.';\n}\n\nasync function getSearchMovies() {\n  try {\n    spinner.spin(target); //spinner\n    const data = await fetchSearchApi.fetchSearchMovies();\n    const cards = data.results;\n    console.log(cards);\n    renderMoviesCard(cards);\n    console.log(data);\n    clearMoviesContainer();\n    renderMoviesCard(cards);\n    if (data.total_results === 0) {\n      notification();\n      return;\n    } else {\n      notification();\n    }\n  } catch (error) {\n    notification();\n  } finally {\n    //spinner\n    spinner.stop();\n  }\n}\n","// import { database } from './js/firebase-module';\n\nimport './sass/index.scss';\nimport './js/home-page';\nimport './js/about-team-modal';\nimport './js/movie-card-modal';\nimport 'basiclightbox/dist/basicLightbox.min.css';\nimport { onFormSubmit } from './js/search-movies';\nimport { btnUp } from './js/button-up';\n\nbtnUp.addEventListener();\n"],"names":["$2shzp","parcelRequire","$56ca17bb174b0ce3$var$BASE_URL","$56ca17bb174b0ce3$var$API_KEY","$56ca17bb174b0ce3$export$2e2bcd8739ae039","async","response","default","get","this","language","page","data","error","searchQuery","movieID","id","incrementPage","decrementPage","resetPage","query","newQuery","pageNum","newPage","constructor","$5sxXJ","$dc777f51b705d798$export$f48ccfcd8b08d9f9","cards","$dc777f51b705d798$var$refs","cardList","insertAdjacentHTML","localStorage","key","$dc777f51b705d798$var$GENRE_KEY","$dc777f51b705d798$var$saveToLocalStorage","map","card","title","poster_path","genre_ids","release_date","genres","list","$dc777f51b705d798$var$genreList","filter","obj","includes","g","name","console","log","length","join","$dc777f51b705d798$var$loadGenres","Date","getFullYear","$dc777f51b705d798$var$createMoviesCard","$dc777f51b705d798$export$cba41b50396d8e3","innerHTML","document","querySelector","$9bfb79a853d4dcfb$var$target","getElementById","$9bfb79a853d4dcfb$var$fetchApiHomeContent","$04jNI","spinner","spin","fetchPopularMovies","results","countOfItems","Math","ceil","items","i","li","createElement","li_0","$9bfb79a853d4dcfb$var$pagination","appendChild","push","li_2","li_1","li_max","showPage","active","item","classList","remove","add","start","end","slice","addEventListener","e","stop","$9bfb79a853d4dcfb$var$showPopularMovies","$67b5d2182eaf8ad0$var$target","$67b5d2182eaf8ad0$var$refs","modalFilmBackdrop","modalFilm","div","cardFilm","cardFilmLibrary","$67b5d2182eaf8ad0$var$idMovie","$67b5d2182eaf8ad0$var$onModalLibraryBtnsClick","idMovie","a","Number","target","dataset","contains","$b5rV1","saveToLocalStorage","WATCHED_FILM","QUEUED_FILM","$67b5d2182eaf8ad0$var$closeModalFilm","window","removeEventListener","$67b5d2182eaf8ad0$var$onCloseEscBtn","$67b5d2182eaf8ad0$var$onCloseModalFilmByBtn","body","code","$67b5d2182eaf8ad0$var$fetchMovieById","message","$67b5d2182eaf8ad0$var$render","detailsCard","$67b5d2182eaf8ad0$var$getModalMovieCardMarkup","idCard","closest","$iQIUW","Notify","failure","$67b5d2182eaf8ad0$var$createMovieCard","then","fetchMoviesTrailers","markupTrailer","catch","currentTarget","original_title","overview","vote_average","vote_count","popularity","genre","$8fb5953e1e6c8326$var$refs","formSearch","notification","$8fb5953e1e6c8326$var$target","$8fb5953e1e6c8326$var$fetchSearchApi","$8fb5953e1e6c8326$var$notification","textContent","preventDefault","elements","value","trim","toLowerCase","fetchSearchMovies","total_results","$8fb5953e1e6c8326$var$getSearchMovies","btnUp"],"version":3,"file":"index.b59c15c9.js.map"}