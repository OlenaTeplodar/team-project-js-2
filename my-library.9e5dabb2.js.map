{"mappings":"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","sources":["src/js/watched-library.js","src/js/queue-library.js","src/js/movie-modal-library.js","src/my-library.js"],"sourcesContent":["import axios from 'axios';\nimport { WATCHED_FILM, loadFromLocalStorage } from './local-storage';\n\nconst refs = {\n  watchedBtn: document.querySelector('.watched-btn'),\n  queueBtn: document.querySelector('.queue-btn'),\n  galleryLibrary: document.querySelector('.gallery-library'),\n};\n\nrefs.watchedBtn.addEventListener('click', onWatchedLibrary);\n\nlet movieIdObj = [];\nlet movieId;\n\nexport async function onWatchedLibrary() {\n  movieIdObj = [];\n  console.log('click');\n  refs.watchedBtn.classList.add('btn-active');\n  refs.queueBtn.classList.remove('btn-active');\n  try {\n    const moviesIdArray = loadFromLocalStorage(WATCHED_FILM);\n    console.log(moviesIdArray);\n\n    for (let i = 0; i < moviesIdArray.length; i++) {\n      movieId = moviesIdArray[i];\n      // console.log(movieId);\n\n      const byMovie = await fetchMovieById(moviesIdArray);\n      // console.log(byMovie);\n      movieIdObj.push(byMovie);\n      console.log(movieIdObj);\n    }\n\n    if (!moviesIdArray || !Object.keys(moviesIdArray).length) {\n      clear();\n      const markupNothing = createMarkupWhenLocalStorageEmpty();\n      refs.galleryLibrary.insertAdjacentHTML('beforeend', markupNothing);\n    } else {\n      clear();\n      const markup = createMoviesCard(movieIdObj);\n      refs.galleryLibrary.insertAdjacentHTML('beforeend', markup);\n    }\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nexport async function fetchMovieById(movieId) {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}?api_key=9fae0fdf266213c68361ca578a95b948&language=en-US`\n    );\n    // console.log(response.data);\n\n    return await response.data;\n  } catch (error) {\n    console.log(error.message);\n  }\n}\nexport function createMarkupWhenLocalStorageEmpty() {\n  return `\n  <li class=\"container-nothing\">\n      <div class=\"container-nothing__content\">\n        <h2 class=\"container-nothing__title\">Your library is empty!</h2>\n        <p class=\"container-nothing__text\">\n          <a\n            title=\"Link to main page\"\n            class=\"container-nothing__link\"\n            href=\"/src/index.html\"\n            >GO TO</a\n          >\n          movie selection.\n        </p>\n      </div>\n    </li>\n    `;\n}\n\nexport function clear() {\n  refs.galleryLibrary.innerHTML = '';\n}\n\nfunction concatGenres(arrOfGenresName) {\n  return arrOfGenresName.reduce((acc, genre, index, arr) => {\n    if (arr.length > 2) {\n      acc = `${arr[0]}, ${arr[1]}, Others`;\n    } else {\n      acc = arr.join(', ');\n    }\n\n    return acc;\n  }, '');\n}\n\nexport function createMoviesCard(cards = []) {\n  return cards\n    .map(card => {\n      const { id, title, poster_path, genres, release_date } = card;\n      const genresForRender = concatGenres(genres.map(genre => genre.name));\n      return `<li class=\"home-card__link\" id=${id}>\n\t\t</div class = \"home-card__thumb\">\n\t\t<picture class=\"home-card__poster\">\n\t\t\t\t  <source media=\"(min-width:1280px)\"  srcset=\"https://image.tmdb.org/t/p/w500${poster_path}\">\n\t\t\t\t  <source media=\"(min-width:768px)\"  srcset=\"https://image.tmdb.org/t/p/w400${poster_path}\">\n\t\t\t\t  <img class=\"home-card__img\" src=\"https://image.tmdb.org/t/p/w300${poster_path}\" alt=\"${title}\" loading=\"lazy\">\n\t\t\t  </picture>\n\n\t\t  <h2 class='card__title'>${title}</h2>\n\t\t  <p class='card__text' id=${id}>${\n        genresForRender ? genresForRender : '---'\n      } | ${new Date(release_date).getFullYear()} </p>\n\t\t</div>\n\t\t  </li>`;\n    })\n    .join('');\n}\n","import axios from 'axios';\nimport { fetchMovieById } from './watched-library';\nimport {\n  createMoviesCard,\n  createMarkupWhenLocalStorageEmpty,\n  clear,\n} from './watched-library';\nimport { loadFromLocalStorage, QUEUED_FILM } from './local-storage';\n\nconst refs = {\n  watchedBtn: document.querySelector('.watched-btn'),\n  queueBtn: document.querySelector('.queue-btn'),\n  galleryLibrary: document.querySelector('.gallery-library'),\n};\n\nrefs.queueBtn.addEventListener('click', onQueueLibrary);\n\nlet movieIdObj = [];\nlet movieId;\n\nexport async function onQueueLibrary() {\n  movieIdObj = [];\n  console.log('click');\n  refs.watchedBtn.classList.remove('btn-active');\n  refs.queueBtn.classList.add('btn-active');\n  clear();\n  try {\n    const moviesIdArray = loadFromLocalStorage(QUEUED_FILM);\n    for (let i = 0; i < moviesIdArray.length; i++) {\n      movieId = moviesIdArray[i];\n      const byMovie = await fetchMovieById(movieId);\n\n      movieIdObj.push(byMovie);\n      console.log(movieIdObj);\n    }\n    if (!moviesIdArray || !Object.keys(moviesIdArray).length) {\n      clear();\n      const markupNothing = createMarkupWhenLocalStorageEmpty();\n      refs.galleryLibrary.insertAdjacentHTML('beforeend', markupNothing);\n    } else {\n      clear();\n      const markup = createMoviesCard(movieIdObj);\n      refs.galleryLibrary.insertAdjacentHTML('beforeend', markup);\n    }\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n","import axios from 'axios';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { genres } from './Templates/genres';\nimport { Spinner } from 'spin.js';\nimport { spinner } from './spinner';\n// для трейлера до фільму у модалці\nimport FetchApiMovies from './api';\nimport { markupMovieTrailer } from './markup-trailer';\nimport {\n  WATCHED_FILM,\n  QUEUED_FILM,\n  loadFromLocalStorage,\n  saveToLocalStorage,\n  checkLocalStorageMovies,\n} from './local-storage';\n\nconst target = document.getElementById('foo');\n\nconst refs = {\n  modalFilmBackdrop: document.querySelector('[data-modal-film]'),\n  modalFilm: document.querySelector('.modal-film'),\n  cardFilmLibrary: document.querySelector('.container-library'),\n};\n\nrefs.cardFilmLibrary.addEventListener('click', onOpenModalFilm);\n\nrefs.cardFilmLibrary.addEventListener('click', onOpenModalFilm);\nrefs.modalFilmBackdrop.addEventListener('click', onBackdropClick);\n\nfunction onOpenModalFilm(e) {\n  refs.modalFilmBackdrop.classList.remove('is-hidden');\n  refs.modalFilm.classList.remove('is-hidden');\n  document.body.classList.add('no-scroll');\n\n  document.addEventListener('click', onCloseModalFilmByBtn);\n  window.addEventListener('keydown', onCloseEscBtn);\n\n  const idCard = e.target.closest('.home-card__link');\n  //   console.log(idCard.id);\n\n  createMovieCard(idCard.id);\n\n  if (!refs.modalFilmBackdrop.classList.contains('is-hidden')) {\n    refs.modalFilm.addEventListener('click', onModalLibraryBtnsClick);\n  }\n\n  // ------ trailer movie-------\n  const boxFetchApiMovies = new FetchApiMovies();\n  boxFetchApiMovies\n    .fetchMoviesTrailers(idCard.id)\n    .then(data => {\n      console.log(data);\n      // перевірка якщо пустий масив\n      // показувати картинку\n      if (data.results.length === 0) {\n        return;\n      }\n      const picture = document.querySelector('.modal-film-card-wrapper');\n      picture.remove();\n      const markupTrailer = markupMovieTrailer(data.results[0].key);\n      refs.modalFilm.insertAdjacentHTML('afterbegin', markupTrailer);\n    })\n    .catch(error => console.log(error));\n  // ------------ end treiler movie -------------\n}\n\nfunction onModalLibraryBtnsClick(e) {\n  const btn = e.target;\n  const filmId = Number(e.target.dataset.id);\n\n  if (e.target.classList.contains('js-add-watched')) {\n    // checkLocalStorageWatchedMovies(btn, filmId);\n    // btn.classList.add('modal-active');\n    checkLocalStorageMovies(btn, filmId, WATCHED_FILM);\n  } else if (e.target.classList.contains('js-add-queue')) {\n    // checkLocalStorageQueueMovies(btn, filmId);\n    checkLocalStorageMovies(btn, filmId, QUEUED_FILM);\n  }\n}\n\nasync function createMovieCard(id) {\n  try {\n    spinner.spin(target);\n    const response = await fetchMovieById(id);\n    // console.log(response);\n    refs.modalFilm.innerHTML = '';\n\n    render(response);\n  } catch (error) {\n    console.log(error.message);\n    closeModalFilm();\n    Notify.failure('Sorry, movie not found. Please try again.');\n  } finally {\n    spinner.stop();\n  }\n}\n\nfunction closeModalFilm() {\n  window.removeEventListener('keydown', onCloseEscBtn);\n  document.removeEventListener('click', onCloseModalFilmByBtn);\n  refs.modalFilmBackdrop.classList.add('is-hidden');\n  refs.modalFilm.classList.add('is-hidden');\n  document.body.classList.remove('no-scroll');\n}\n\nfunction onCloseModalFilmByBtn(e) {\n  if (\n    e.target.classList.contains('close-modal__btn-text') ||\n    e.target.classList.contains('close-modal__btn-inner') ||\n    e.target.classList.contains('close-modal__btn-text')\n  ) {\n    closeModalFilm();\n  }\n}\n\nfunction onBackdropClick(e) {\n  if (e.currentTarget === e.target) {\n    closeModalFilm();\n  }\n}\n\nfunction onCloseEscBtn(e) {\n  // console.log(e.code);\n  if (e.code === 'Escape') {\n    closeModalFilm();\n  }\n}\n\nasync function fetchMovieById(idMovie) {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${idMovie}?api_key=9fae0fdf266213c68361ca578a95b948&language=en-US`\n    );\n    // console.log(response.data);\n\n    return await response.data;\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\n// ---Render--\nfunction render(response) {\n  const detailsCard = getModalMovieCardMarkup(response);\n  // console.log(detailsCard);\n  //   getWatchedToLocalStr(response);\n  //   getQueuedToLocalStr(response);\n\n  refs.modalFilm.insertAdjacentHTML('beforeend', detailsCard);\n\n  //   const btnWatchedFilmModalWindowEl = document.querySelector(\n  //     '.modal-window__watched-btn'\n  //   );\n  //   btnWatchedFilmModalWindowEl.addEventListener('click', onClickBtnWatchedFilm);\n  //   const btnQueuedFilmModalWindowEl = document.querySelector(\n  //     '.modal-window__queued-btn'\n  //   );\n  //   btnQueuedFilmModalWindowEl.addEventListener('click', onClickBtnQueuedFilm);\n}\n\n// ------Markup----\n\nconst getModalMovieCardMarkup = ({\n  id,\n  title,\n  original_title,\n  overview,\n  poster_path,\n  vote_average,\n  vote_count,\n  popularity,\n  genres,\n}) => {\n  const genresList = genres.map(genre => genre.name).join(', ');\n\n  const watchedFilmsArray = loadFromLocalStorage(WATCHED_FILM);\n  const queuedFilmsArray = loadFromLocalStorage(QUEUED_FILM);\n  const currentWatchedFilm = watchedFilmsArray.includes(id);\n  const currentQueuedFilm = queuedFilmsArray.includes(id);\n\n  let textBtnWatched = 'ADD TO WATCHED';\n  let textBtnQueue = 'ADD TO QUEUE';\n\n  if (currentWatchedFilm) {\n    textBtnWatched = 'REMOVE FROM WATCHED';\n  }\n\n  if (currentQueuedFilm) {\n    textBtnQueue = 'REMOVE FROM QUEUE';\n  }\n\n  return `\n    <button\n        type=\"button\"\n        class=\"modal-film__close-button close-modal__btn\"\n      >\n      <div class=\"close-modal__btn-inner\">\n      <span class=\"close-modal__btn-text\">Back\n      </span> </div>\n      </button>\n    <div class=\"modal-film__card\"  id=\"${id}\">\n    <div class=\"modal-film-card-wrapper\">\n    <picture class=\"modal-film__img>\n    <source media=\"(min-width:1024px)\" srcset=\"https://image.tmdb.org/t/p/w500${poster_path}\">\n    <source media=\"(min-width:768px)\"  srcset=\"https://image.tmdb.org/t/p/w400${poster_path}\">\n    <img class=\"img-film__poster\" src=\"https://image.tmdb.org/t/p/w300${poster_path}\"  \"alt=\"${title}\" loading=\"lazy\"  >\n  </picture>\n  </div>\n  <div class=\"movie-info\">\n    <h2 class=\"film-title\">${title}</h2>\n    <ul class=\"film-title__list-film\">\n    <li class=\"film-title__item-film\"><p class=\"film-title__value\" >Vote / Votes </p><p class=\"film-title__desc-film\"><span class=\"film-title__vote_average\">${vote_average}</span><span class=\"film-title__slash\">/</span><span class=\"film-title__vote_count\">${vote_count}</span> </p> </li>\n    <li class=\"film-title__item-film\"><p class=\"film-title__value\">Popularity</p><p class=\"film-title__desc-film\">${popularity}</p></li>\n    <li class=\"film-title__item-film\"><p class=\"film-title__value\">Original Title</p><p class=\"film-title__desc-film\">${original_title}</p></li>\n    <li class=\"film-title__item-film\"><p class=\"film-title__value\">Genre</p><p class=\"film-title__desc-film\">${genresList}</p></li>\n    </ul>\n    <h3 class=\"about-title\">About ${original_title}</h3>\n    <p class=\"text-about-movie\">${overview}</p>\n    \n     <ul class=\"modal-window_list-btn\">\n      <li class=\"modal-window_list-item-btn \"><button aria-label=\"add or remove from watched\" class=\"modal-active modal-window__watched-btn js-add-watched\" type=\"button\" data-id=${id}>${textBtnWatched}</button></li>\n      <li class=\"modal-window_list-item-btn \"><button aria-label=\"add or remove from queue\" class=\"modal-active modal-window__queued-btn js-add-queue\" type=\"button\" data-id=${id}>${textBtnQueue}</button></li>\n    </ul>\n    </div>\n  `;\n};\n","import './js/watched-library';\nimport './js/queue-library';\nimport './js/movie-modal-library';\nimport './js/about-team-modal';\nimport './js/switch-theme';\nimport { Spinner } from 'spin.js';\nimport { spinner } from './js/spinner';\nimport { btnUp } from './js/button-up';\nimport { onWatchedLibrary, movieIdObj } from './js/watched-library';\n\n/// button-up\nbtnUp.addEventListener();\n////render watched gallery\nonWatchedLibrary();\n///spinner\nconst target = document.getElementById('foo');\nspinner.spin(target);\nwindow.addEventListener('load', function (e) {\n  spinner.stop();\n});\n"],"names":["$2shzp","parcelRequire","$71fb53b734638d70$var$refs","watchedBtn","document","querySelector","queueBtn","galleryLibrary","addEventListener","$71fb53b734638d70$export$852075710b39decd","$71fb53b734638d70$var$movieId","$71fb53b734638d70$var$movieIdObj","async","console","log","classList","add","remove","moviesIdArray","$b5rV1","loadFromLocalStorage","WATCHED_FILM","i","length","byMovie","$71fb53b734638d70$export$6d0761608aa90887","push","Object","keys","$71fb53b734638d70$export$42ffd38884aecdac","markup","$71fb53b734638d70$export$8b2723ee49351d8","insertAdjacentHTML","markupNothing","$71fb53b734638d70$export$f03c78e80b131f2e","error","message","movieId","response","default","get","data","innerHTML","cards","map","card","id","title","poster_path","genres","release_date","genresForRender","genre","name","reduce","acc","index","arr","join","Date","getFullYear","$84758fef4061c729$var$refs","$84758fef4061c729$var$movieIdObj","QUEUED_FILM","$84758fef4061c729$var$movieId","$4b58029bf371490e$var$target","getElementById","$4b58029bf371490e$var$refs","modalFilmBackdrop","modalFilm","cardFilmLibrary","$4b58029bf371490e$var$onOpenModalFilm","e","body","$4b58029bf371490e$var$onCloseModalFilmByBtn","window","$4b58029bf371490e$var$onCloseEscBtn","idCard","target","closest","$04jNI","spinner","spin","idMovie","$4b58029bf371490e$var$fetchMovieById","detailsCard","$4b58029bf371490e$var$getModalMovieCardMarkup","$4b58029bf371490e$var$render","$4b58029bf371490e$var$closeModalFilm","$iQIUW","Notify","failure","stop","$4b58029bf371490e$var$createMovieCard","contains","$4b58029bf371490e$var$onModalLibraryBtnsClick","$7rYDH","fetchMoviesTrailers","then","results","markupTrailer","$4WdgQ","markupMovieTrailer","key","catch","btn","filmId","Number","dataset","checkLocalStorageMovies","removeEventListener","code","currentTarget","original_title","overview","vote_average","vote_count","popularity","genresList","watchedFilmsArray","queuedFilmsArray","textBtnWatched","textBtnQueue","includes","btnUp","$fc8e7c71b3b7ed96$var$target"],"version":3,"file":"my-library.9e5dabb2.js.map"}