{"mappings":"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","sources":["src/js/watched-library.js","src/js/movie-modal-library.js","src/my-library.js"],"sourcesContent":["import axios from 'axios';\nimport { loadFromLocalStorage } from './local-storage';\nconst refs = {\n  watchedBtn: document.querySelector('.watched-btn'),\n  queueBtn: document.querySelector('.queue-btn'),\n  galleryLibrary: document.querySelector('.gallery-library'),\n};\n\nrefs.galleryLibrary.addEventListener('click', onWatchedLibrary);\n\nlet movieIdObj = [];\nlet movieId;\nexport async function onWatchedLibrary() {\n  refs.watchedBtn.classList.add('btn-active');\n  refs.queueBtn.classList.remove('btn-active');\n  try {\n    const moviesIdArray = loadFromLocalStorage('watchedMovies');\n    console.log(moviesIdArray);\n    for (let i = 0; i < moviesIdArray.length; i++) {\n      movieId = moviesIdArray[i];\n      console.log(movieId);\n      const byMovie = await fetchMovieById(movieId);\n      console.log(byMovie);\n      movieIdObj.push(byMovie);\n    }\n\n    if (!moviesIdArray || !Object.keys(moviesIdArray).length) {\n      clear();\n      const markupNothing = createMarkupWhenLocalStorageEmpty();\n      refs.galleryLibrary.insertAdjacentHTML('beforeend', markupNothing);\n    } else {\n      clear();\n      const markup = createMoviesCard(movieIdObj);\n      refs.galleryLibrary.insertAdjacentHTML('beforeend', markup);\n    }\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nasync function fetchMovieById(movieId) {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}?api_key=9fae0fdf266213c68361ca578a95b948&language=en-US`\n    );\n    console.log(response.data);\n\n    return await response.data;\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nfunction createMarkupWhenLocalStorageEmpty() {\n  return `\n  <li class=\"container-nothing\">\n      <div class=\"container-nothing__content\">\n        <h2 class=\"container-nothing__title\">Your library is empty!</h2>\n        <p class=\"container-nothing__text\">\n          <a\n            title=\"Link to main page\"\n            class=\"container-nothing__link\"\n            href=\"/src/index.html\"\n            >GO TO</a\n          >\n          movie selection.\n        </p>\n      </div>\n    </li>\n    `;\n}\n\nfunction clear() {\n  refs.galleryLibrary.innerHTML = '';\n}\n\nfunction concatGenres(arrOfGenresName) {\n  return arrOfGenresName.reduce((acc, genre, index, arr) => {\n    if (arr.length > 2) {\n      acc = `${arr[0]}, ${arr[1]}, Others`;\n    } else {\n      acc = arr.join(', ');\n    }\n\n    return acc;\n  }, '');\n}\n\nexport function createMoviesCard(cards = []) {\n  return cards\n    .map(card => {\n      const { id, title, poster_path, genres, release_date } = card;\n      const genresForRender = concatGenres(genres.map(genre => genre.name));\n      return `<li class=\"home-card__link\" id=${id}>\n\t\t</div class = \"home-card__thumb\">\n\t\t<picture class=\"home-card__poster\">\n\t\t\t\t  <source media=\"(min-width:1280px)\"  srcset=\"https://image.tmdb.org/t/p/w500${poster_path}\">\n\t\t\t\t  <source media=\"(min-width:768px)\"  srcset=\"https://image.tmdb.org/t/p/w400${poster_path}\">\n\t\t\t\t  <img class=\"home-card__img\" src=\"https://image.tmdb.org/t/p/w300${poster_path}\" alt=\"${title}\" loading=\"lazy\">\n\t\t\t  </picture>\n\n\t\t  <h2 class='card__title'>${title}</h2>\n\t\t  <p class='card__text' id=${id}>${\n        genresForRender ? genresForRender : '---'\n      } | ${new Date(release_date).getFullYear()} </p>\n\t\t</div>\n\t\t  </li>`;\n    })\n    .join('');\n}\n","import axios from 'axios';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { genres } from './Templates/genres';\nimport { Spinner } from 'spin.js';\nimport { spinner } from './spinner';\n\nconst target = document.getElementById('foo');\n\nconst refs = {\n  modalFilmBackdrop: document.querySelector('[data-modal-film]'),\n  modalFilm: document.querySelector('.modal-film'),\n  cardFilmLibrary: document.querySelector('.container-library'),\n};\n\nrefs.cardFilmLibrary.addEventListener('click', onOpenModalFilm);\n\nrefs.cardFilmLibrary.addEventListener('click', onOpenModalFilm);\nrefs.modalFilmBackdrop.addEventListener('click', onBackdropClick);\n\nfunction onOpenModalFilm(e) {\n  refs.modalFilmBackdrop.classList.remove('is-hidden');\n  refs.modalFilm.classList.remove('is-hidden');\n  document.body.classList.add('no-scroll');\n\n  document.addEventListener('click', onCloseModalFilmByBtn);\n  window.addEventListener('keydown', onCloseEscBtn);\n\n  const idCard = e.target.closest('.home-card__link');\n  //   console.log(idCard.id);\n\n  createMovieCard(idCard.id);\n\n  // fetchMovieById(idCard).then(response => {\n  //   refs.cardFilmLibrary.innerHTML = '';\n  //   return render(response);\n  // });\n  // ------ trailer movie-------\n  // const boxFetchApiMovies = new FetchApiMovies();\n  // boxFetchApiMovies\n  //   .fetchMoviesTrailers(idCard)\n  //   .then(data => {\n  //     console.log(data);\n  //     // перевірка якщо пустий масив\n  //     // показувати картинку\n  //     if (data.results.length === 0) {\n  //       return;\n  //     }\n  //     const picture = document.querySelector('.modal-film-card-wrapper');\n  //     picture.remove();\n  //     const markupTrailer = markupMovieTrailer(data.results[0].key);\n  //     refs.modalFilm.insertAdjacentHTML('afterbegin', markupTrailer);\n  //   })\n  //   .catch(error => console.log(error));\n  // ------------ end treiler movie -------------\n}\n\nasync function createMovieCard(id) {\n  try {\n    spinner.spin(target);\n    const response = await fetchMovieById(id);\n    // console.log(response);\n    refs.modalFilm.innerHTML = '';\n\n    render(response);\n  } catch (error) {\n    console.log(error.message);\n    closeModalFilm();\n    Notify.failure('Sorry, movie not found. Please try again.');\n  } finally {\n    spinner.stop();\n  }\n}\n\nfunction closeModalFilm() {\n  window.removeEventListener('keydown', onCloseEscBtn);\n  document.removeEventListener('click', onCloseModalFilmByBtn);\n  refs.modalFilmBackdrop.classList.add('is-hidden');\n  refs.modalFilm.classList.add('is-hidden');\n  document.body.classList.remove('no-scroll');\n}\n\nfunction onCloseModalFilmByBtn(e) {\n  if (\n    e.target.classList.contains('close-modal__btn-text') ||\n    e.target.classList.contains('close-modal__btn-inner') ||\n    e.target.classList.contains('close-modal__btn-text')\n  ) {\n    closeModalFilm();\n  }\n}\n\nfunction onBackdropClick(e) {\n  if (e.currentTarget === e.target) {\n    closeModalFilm();\n  }\n}\n\nfunction onCloseEscBtn(e) {\n  // console.log(e.code);\n  if (e.code === 'Escape') {\n    closeModalFilm();\n  }\n}\n\nasync function fetchMovieById(idMovie) {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${idMovie}?api_key=9fae0fdf266213c68361ca578a95b948&language=en-US`\n    );\n    // console.log(response.data);\n\n    return await response.data;\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\n// ---Render--\nfunction render(response) {\n  const detailsCard = getModalMovieCardMarkup(response);\n  // console.log(detailsCard);\n  //   getWatchedToLocalStr(response);\n  //   getQueuedToLocalStr(response);\n\n  refs.modalFilm.insertAdjacentHTML('beforeend', detailsCard);\n\n  //   const btnWatchedFilmModalWindowEl = document.querySelector(\n  //     '.modal-window__watched-btn'\n  //   );\n  //   btnWatchedFilmModalWindowEl.addEventListener('click', onClickBtnWatchedFilm);\n  //   const btnQueuedFilmModalWindowEl = document.querySelector(\n  //     '.modal-window__queued-btn'\n  //   );\n  //   btnQueuedFilmModalWindowEl.addEventListener('click', onClickBtnQueuedFilm);\n}\n\n// ------Markup----\n\nconst getModalMovieCardMarkup = ({\n  id,\n  title,\n  original_title,\n  overview,\n  poster_path,\n  vote_average,\n  vote_count,\n  popularity,\n  genres,\n}) => {\n  const genresList = genres.map(genre => genre.name).join(', ');\n\n  // const watchedFilm = localStorage.getItem('WATCHED-FILM');\n  // const watchedFilmsArray = JSON.parse(watchedFilm) || [];\n  // const queuedFilm = localStorage.getItem('QUEUED-FILM');\n  // const queuedFilmsArray = JSON.parse(queuedFilm) || [];\n\n  // const a = String(id);\n\n  // const hasWatchedFilm = watchedFilmsArray.some(value => value === String(id));\n  // console.log(hasWatchedFilm);\n  // console.log(id);\n\n  // console.log(watchedFilmsArray);\n\n  // const hasWatchedFilm = watchedFilmsArray.includes(id);\n  // console.log(hasWatchedFilm);\n  // console.log(id);\n\n  return `\n    <button\n        type=\"button\"\n        class=\"modal-film__close-button close-modal__btn\"\n      >\n      <div class=\"close-modal__btn-inner\">\n      <span class=\"close-modal__btn-text\">Back\n      </span> </div>\n      </button>\n    <div class=\"modal-film__card\"  id=\"${id}\">\n    <div class=\"modal-film-card-wrapper\">\n    <picture class=\"modal-film__img>\n    <source media=\"(min-width:1024px)\" srcset=\"https://image.tmdb.org/t/p/w500${poster_path}\">\n    <source media=\"(min-width:768px)\"  srcset=\"https://image.tmdb.org/t/p/w400${poster_path}\">\n    <img class=\"img-film__poster\" src=\"https://image.tmdb.org/t/p/w300${poster_path}\"  \"alt=\"${title}\" loading=\"lazy\"  >\n  </picture>\n  </div>\n  <div class=\"movie-info\">\n    <h2 class=\"film-title\">${title}</h2>\n    <ul class=\"film-title__list-film\">\n    <li class=\"film-title__item-film\"><p class=\"film-title__value\" >Vote / Votes </p><p class=\"film-title__desc-film\"><span class=\"film-title__vote_average\">${vote_average}</span><span class=\"film-title__slash\">/</span><span class=\"film-title__vote_count\">${vote_count}</span> </p> </li>\n    <li class=\"film-title__item-film\"><p class=\"film-title__value\">Popularity</p><p class=\"film-title__desc-film\">${popularity}</p></li>\n    <li class=\"film-title__item-film\"><p class=\"film-title__value\">Original Title</p><p class=\"film-title__desc-film\">${original_title}</p></li>\n    <li class=\"film-title__item-film\"><p class=\"film-title__value\">Genre</p><p class=\"film-title__desc-film\">${genresList}</p></li>\n    </ul>\n    <h3 class=\"about-title\">About ${original_title}</h3>\n    <p class=\"text-about-movie\">${overview}</p>\n    \n    <ul>\n    <li><button class=\"modal-window__watched-btn\" type=\"button\" data-id=${id}>Add</button></li>\n    <li><button class=\"modal-window__queued-btn\" type=\"button\" data-id=${id}>Add to queue</button></li>\n  </ul>\n    </div>\n  `;\n};\n","import './js/watched-library';\nimport './js/movie-modal-library';\nimport './js/queue-library';\nimport './js/about-team-modal';\nimport { Spinner } from 'spin.js';\nimport { spinner } from './js/spinner';\nimport { btnUp } from './js/button-up';\nimport { onWatchedLibrary } from './js/watched-library';\n\n/// button-up\nbtnUp.addEventListener();\n////render watched gallery\nonWatchedLibrary();\n///spinner\nconst target = document.getElementById('foo');\nspinner.spin(target);\nwindow.addEventListener('load', function (e) {\n  spinner.stop();\n});\n"],"names":["$dIxxU","parcelRequire","$44ef74221443e4f6$var$refs","watchedBtn","document","querySelector","queueBtn","galleryLibrary","addEventListener","$44ef74221443e4f6$export$852075710b39decd","$44ef74221443e4f6$var$movieId","$44ef74221443e4f6$var$movieIdObj","async","classList","add","remove","moviesIdArray","$4LMMA","loadFromLocalStorage","console","log","i","length","byMovie","$44ef74221443e4f6$var$fetchMovieById","push","Object","keys","$44ef74221443e4f6$var$clear","markup","cards","map","card","id","title","poster_path","genres","release_date","genresForRender","genre","name","reduce","acc","index","arr","join","Date","getFullYear","$44ef74221443e4f6$export$8b2723ee49351d8","insertAdjacentHTML","markupNothing","error","message","movieId","response","default","get","data","innerHTML","$5d201852917eaf5e$var$target","getElementById","$5d201852917eaf5e$var$refs","modalFilmBackdrop","modalFilm","cardFilmLibrary","$5d201852917eaf5e$var$onOpenModalFilm","e","body","$5d201852917eaf5e$var$onCloseModalFilmByBtn","window","$5d201852917eaf5e$var$onCloseEscBtn","$j1lrD","spinner","spin","idMovie","$5d201852917eaf5e$var$fetchMovieById","detailsCard","$5d201852917eaf5e$var$getModalMovieCardMarkup","$5d201852917eaf5e$var$render","$5d201852917eaf5e$var$closeModalFilm","$h6c0i","Notify","failure","stop","$5d201852917eaf5e$var$createMovieCard","target","closest","removeEventListener","contains","code","currentTarget","original_title","overview","vote_average","vote_count","popularity","btnUp","$865c390aa2d1ad34$var$target"],"version":3,"file":"my-library.1efcfac2.js.map"}